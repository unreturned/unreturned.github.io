apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      initContainers:
      - name: init-downloader
        image: docker.io/library/alpine:latest
        command: ["/bin/sh", "-c"]
        args:
          - wget -O /usr/share/nginx/html/index.html https://kovalkoff.ru/deckhouse-cheatsheet/index.html;
        volumeMounts:
        - name: html-volume
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            cpu: 100m
            memory: 25Mi
      containers:
      - name: webserver
        image: docker.io/library/nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-volume
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            cpu: 100m
            memory: 25Mi
          limits: 
            cpu: 1000m
            memory: 100Mi
      volumes:
      - name: html-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: webserver
spec:
  selector:
    app: webserver
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: cheatsheet-cert
spec:
  secretName: cheatsheet-tls
  dnsNames:
  - cheatsheet.archdev.deckhouse-presales.hf.flant.com
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webserver-ingress
spec:
  tls:
  - hosts:
    - cheatsheet.archdev.deckhouse-presales.hf.flant.com
    secretName: cheatsheet-tls
  rules:
  - host: cheatsheet.archdev.deckhouse-presales.hf.flant.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: webserver
            port:
              number: 80